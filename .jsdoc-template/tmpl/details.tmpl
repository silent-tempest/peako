<%

let
  object_class = '',
  need_wrapper = true;

const add_attr = ( value, color ) => {
  if ( need_wrapper ) {
    print( '<div class="doclet-attrs">' );
    need_wrapper = false;
  } else {
    print( '<br />' );
  }

  print( '<span class="' + color + '">' + value + '</span>' );
};

// Check if the default value is an object or array; if so, apply code highlighting
if ( obj.defaultvalue && ( obj.defaultvaluetype === 'object' || obj.defaultvaluetype === 'array' ) ) {
  obj.defaultvalue = '<pre class="prettyprint"><code>' + obj.defaultvalue + '</code></pre>';
  object_class = ' class="object-value"';
}

if ( !obj.hideconstructor && obj.properties && properties.length ) { %>
  <h5 class="subsection-title">Properties</h5>
  <%= this.partial( 'properties.tmpl', obj ) %>
<% } %>

<dl class="details"><%
  if ( obj.deprecated ) {
    if ( obj.deprecated === true ) {
      add_attr( 'deprecated', 'color-red' );
    } else {
      add_attr( deprecated, 'color-red' );
    }
  }

  if ( obj.scope === 'static' ) {
    add_attr( 'static', 'color-deep-purple' );
  }

  if ( obj.chainable ) {
    add_attr( 'chainable', 'color-deep-orange' );
  }

  if ( obj.since ) {
    add_attr( 'since ' + since, 'color-green' );
  }

  if ( obj.meta && this.outputSourceFiles ) {
    add_attr( this.linkto( meta.shortpath ) + ' - ' + this.linkto( meta.shortpath, 'line ' + meta.lineno, null, 'line-' + meta.lineno ), 'color-blue' );
  }

  if ( !need_wrapper ) {
    print( '</div>' );
  }

  if ( obj.version ) { %>
    <dt class="tag-version">Version:</dt>
    <dd class="tag-version"><ul class="dummy"><li><%= version %></li></ul></dd>
  <% }

  if ( obj.inherited && obj.inherits && !obj.overrides ) { %>
    <dt class="inherited-from">Inherited From:</dt>
    <dd class="inherited-from">
      <ul class="dummy">
        <li><%= this.linkto( inherits, this.htmlsafe( inherits ) ) %></li>
      </ul>
    </dd>
  <% }

  if ( obj.overrides ) { %>
    <dt class="tag-overrides">Overrides:</dt>
    <dd class="tag-overrides">
      <ul class="dummy">
        <li><%= this.linkto( overrides, this.htmlsafe( overrides ) ) %></li>
      </ul>
    </dd>
  <% }

  if ( obj.implementations && implementations.length ) { %>
    <dt class="implementations">Implementations:</dt>
    <dd class="implementations">
      <ul>
        <% for ( let impl of implementations ) {
          print( '<li>' + this.linkto( impl, this.htmlsafe( impl ) ) + '</li>' );
        } %>
      </ul>
    </dd>
  <% }

  if ( obj.implements && obj.implements.length ) { %>
    <dt class="implements">Implements:</dt>
    <dd class="implements">
      <ul>
        <% for ( let impl of obj.implements ) {
          print( '<li>' + this.linkto( impl, this.htmlsafe( impl ) ) + '</li>' );
        } %>
      </ul>
    </dd>
  <% }

  if ( obj.mixes && mixes.length ) { %>
    <dt class="mixes">Mixes In:</dt>
    <dd class="mixes">
      <ul>
        <% for ( let foo of mixes ) {
          print( '<li>' + this.linkto( foo, foo ) + '</li>' );
        } %>
      </ul>
    </dd>
  <% }

  if ( obj.author && author.length ) { %>
    <dt class="tag-author">Author:</dt>
    <dd class="tag-author">
      <ul>
        <% for ( let author of obj.author ) {
          print( '<li>' + this.resolveAuthorLinks( author ) + '</li>' );
        } %>
      </ul>
    </dd>
  <% }

  if ( obj.copyright ) { %>
    <dt class="tag-copyright">Copyright:</dt>
    <dd class="tag-copyright">
      <ul class="dummy">
        <li><%= copyright %></li>
      </ul>
    </dd>
  <% }

  if ( obj.license ) { %>
    <dt class="tag-license">License:</dt>
    <dd class="tag-license">
      <ul class="dummy">
        <li><%= license %></li>
      </ul>
    </dd>
  <% }

  if ( obj.defaultvalue ) { %>
    <dt class="tag-default">Default Value:</dt>
    <dd class="tag-default">
      <ul class="dummy">
        <li<%= object_class %>><%= defaultvalue %></li>
      </ul>
    </dd>
  <% }

  if ( obj.tutorials && tutorials.length ) { %>
    <dt class="tag-tutorial">Tutorials:</dt>
    <dd class="tag-tutorial">
      <ul>
        <% for ( let tutorial of tutorials ) {
          print( '<li>' + this.tutoriallink( tutorial ) + '</li>' );
        } %>
      </ul>
    </dd>
  <% }

  if ( obj.see && see.length ) { %>
    <dt class="tag-see">See:</dt>
    <dd class="tag-see">
      <ul>
        <% for ( let see of obj.see ) {
          print( '<li>' + this.linkto( see ) + '</li>' );
        } %>
      </ul>
    </dd>
  <% }

  if ( obj.todo && todo.length ) { %>
    <dt class="tag-todo">To Do:</dt>
    <dd class="tag-todo">
      <ul>
        <% for ( let todo of obj.todo ) {
          print( '<li>' + todo + '</li>' );
        } %>
      </ul>
    </dd>
  <% } %>
</dl>